{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 9eb99d6c56edc23b67b8","webpack:///./src/index.ts","webpack:///./src/ng2-auto-complete.ts","webpack:///external \"@angular/core\"","webpack:///external \"@angular/http\"","webpack:///external \"rxjs/add/operator/map\"","webpack:///./src/ng2-auto-complete.module.ts","webpack:///external \"@angular/common\"","webpack:///external \"@angular/forms\"","webpack:///./src/ng2-auto-complete.component.ts","webpack:///./src/ng2-auto-complete.directive.ts"],"names":[],"mappings":"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","file":"ng2-auto-complete.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"@angular/http\"), require(\"rxjs/add/operator/map\"), require(\"@angular/common\"), require(\"@angular/forms\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\", \"@angular/http\", \"rxjs/add/operator/map\", \"@angular/common\", \"@angular/forms\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ng2-auto-complete\"] = factory(require(\"@angular/core\"), require(\"@angular/http\"), require(\"rxjs/add/operator/map\"), require(\"@angular/common\"), require(\"@angular/forms\"));\n\telse\n\t\troot[\"ng2-auto-complete\"] = factory(root[\"@angular/core\"], root[\"@angular/http\"], root[\"rxjs/add/operator/map\"], root[\"@angular/common\"], root[\"@angular/forms\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9eb99d6c56edc23b67b8","import { Ng2AutoComplete } from \"./ng2-auto-complete\";\nimport { Ng2AutoCompleteModule } from \"./ng2-auto-complete.module\";\nimport { Ng2AutoCompleteComponent } from \"./ng2-auto-complete.component\";\nimport { Ng2AutoCompleteDirective } from \"./ng2-auto-complete.directive\";\n\nexport {\n  Ng2AutoComplete,\n  Ng2AutoCompleteModule,\n  Ng2AutoCompleteComponent,\n  Ng2AutoCompleteDirective\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./src/index.ts","import { Injectable, Optional } from \"@angular/core\";\nimport { Http, Response } from \"@angular/http\";\nimport { Observable } from \"rxjs\";\nimport \"rxjs/add/operator/map\";\n\n/**\n * provides auto-complete related utility functions\n */\n@Injectable()\nexport class Ng2AutoComplete {\n\n  public source: string;\n  public pathToData: string;\n\n  constructor(@Optional() private http: Http) {\n    // ...\n  }\n\n  filter(list: any[], keyword: string) {\n    return list.filter(\n      el => {\n        let objStr = JSON.stringify(el).toLowerCase();\n        keyword = keyword.toLowerCase();\n        //console.log(objStr, keyword, objStr.indexOf(keyword) !== -1);\n        return objStr.indexOf(keyword) !== -1;\n      }\n    );\n  }\n\n  /**\n   * return remote data from the given source and options, and data path\n   */\n  getRemoteData(keyword: string): Observable<Response> {\n    if (typeof this.source !== 'string') {\n      throw \"Invalid type of source, must be a string. e.g. http://www.google.com?q=:my_keyword\";\n    } else if (!this.http) {\n      throw \"Http is required.\";\n    }\n\n    let matches = this.source.match(/:[a-zA-Z_]+/);\n    if (matches === null) {\n      throw \"Replacement word is missing.\";\n    }\n\n    let replacementWord = matches[0];\n    let url = this.source.replace(replacementWord, keyword);\n\n    return this.http.get(url)\n      .map(resp => resp.json())\n      .map(resp => {\n        let list = resp.data || resp;\n\n        if (this.pathToData) {\n          let paths = this.pathToData.split(\".\");\n          paths.forEach(prop => list = list[prop]);\n        }\n\n        return list;\n      });\n  };\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./src/ng2-auto-complete.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/core\"\n// module id = 2\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/http\"\n// module id = 3\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/add/operator/map\"\n// module id = 4\n// module chunks = 0","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { Ng2AutoCompleteComponent } from './ng2-auto-complete.component';\nimport { Ng2AutoCompleteDirective } from './ng2-auto-complete.directive';\nimport { Ng2AutoComplete } from './ng2-auto-complete';\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [Ng2AutoCompleteComponent, Ng2AutoCompleteDirective],\n  exports:  [Ng2AutoCompleteComponent, Ng2AutoCompleteDirective],\n  entryComponents: [Ng2AutoCompleteComponent]\n})\nexport class Ng2AutoCompleteModule {\n  static forRoot() {\n    return {\n      ngModule: Ng2AutoCompleteModule,\n      providers: [Ng2AutoComplete]\n    }\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./src/ng2-auto-complete.module.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/common\"\n// module id = 6\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/forms\"\n// module id = 7\n// module chunks = 0","import {\n  Component,\n  ElementRef,\n  Input,\n  Output,\n  OnInit,\n  ViewEncapsulation,\n  EventEmitter,\n  ViewChild\n} from \"@angular/core\";\nimport { Ng2AutoComplete } from \"./ng2-auto-complete\";\n\n/**\n * show a selected date in monthly calendar\n * Each filteredList item has the following property in addition to data itself\n *   1. displayValue as string e.g. Allen Kim\n *   2. dataValue as any e.g.\n */\n@Component({\n  selector: \"ng2-auto-complete\",\n  template: `\n  <div class=\"ng2-auto-complete\">\n\n    <!-- keyword input -->\n    <input *ngIf=\"showInputTag\"\n           #autoCompleteInput class=\"keyword\"\n           placeholder=\"{{placeholder}}\"\n           (focus)=\"showDropdownList($event)\"\n           (blur)=\"hideDropdownList()\"\n           (keydown)=\"inputElKeyHandler($event)\"\n           (input)=\"reloadListInDelay($event)\"\n           [(ngModel)]=\"keyword\" />\n\n    <!-- dropdown that user can select -->\n    <ul *ngIf=\"dropdownVisible\" [class.empty]=\"emptyList\">\n      <li *ngIf=\"isLoading\" class=\"loading\">{{loadingText}}</li>\n      <li *ngIf=\"minCharsEntered && !isLoading && !filteredList.length\"\n           (mousedown)=\"selectOne('')\"\n           class=\"blank-item\">{{noMatchFoundText || 'No Result Found'}}</li>\n      <li *ngIf=\"blankOptionText && filteredList.length\"\n          (mousedown)=\"selectOne('')\"\n          class=\"blank-item\">{{blankOptionText}}</li>\n      <li class=\"item\"\n          *ngFor=\"let item of filteredList; let i=index\"\n          (mousedown)=\"selectOne(item)\"\n          [ngClass]=\"{selected: i === itemIndex}\"\n          [innerHtml]=\"getFormattedList(item)\">\n      </li>\n    </ul>\n\n  </div>`,\n  providers: [Ng2AutoComplete],\n  styles: [`\n  @keyframes slideDown {\n    0% {\n      transform:  translateY(-10px);\n    }\n    100% {\n      transform: translateY(0px);\n    }\n  }\n  .ng2-auto-complete {\n    background-color: transparent;\n  }\n  .ng2-auto-complete > input {\n    outline: none;\n    border: 0;\n    padding: 2px; \n    box-sizing: border-box;\n    background-clip: content-box;\n  }\n\n  .ng2-auto-complete > ul {\n    background-color: #fff;\n    margin: 0;\n    width : 100%;\n    overflow-y: auto;\n    list-style-type: none;\n    padding: 0;\n    border: 1px solid #ccc;\n    box-sizing: border-box;\n    animation: slideDown 0.1s;\n  }\n  .ng2-auto-complete > ul.empty {\n    display: none;\n  }\n\n  .ng2-auto-complete > ul li {\n    padding: 2px 5px;\n    border-bottom: 1px solid #eee;\n  }\n\n  .ng2-auto-complete > ul li.selected {\n    background-color: #ccc;\n  }\n\n  .ng2-auto-complete > ul li:last-child {\n    border-bottom: none;\n  }\n\n  .ng2-auto-complete > ul li:hover {\n    background-color: #ccc;\n  }`\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class Ng2AutoCompleteComponent implements OnInit {\n\n  /**\n   * public input properties\n   */\n  @Input(\"list-formatter\") listFormatter: (arg: any) => string;\n  @Input(\"source\") source: any;\n  @Input(\"path-to-data\") pathToData: string;\n  @Input(\"min-chars\") minChars: number = 0;\n  @Input(\"value-property-name\") valuePropertyName: string = \"id\";\n  @Input(\"display-property-name\") displayPropertyName: string = \"value\";\n  @Input(\"placeholder\") placeholder: string;\n  @Input(\"blank-option-text\") blankOptionText: string;\n  @Input(\"no-match-found-text\") noMatchFoundText: string;\n  @Input(\"accept-user-input\") acceptUserInput: boolean;\n  @Input(\"loading-text\") loadingText: string = \"Loading\";\n  @Input(\"max-num-list\") maxNumList: number;\n  @Input(\"show-input-tag\") showInputTag: boolean = true;\n\n  @Output() valueSelected = new EventEmitter();\n  @Output() inputChanged = new EventEmitter();\n  @ViewChild('autoCompleteInput') autoCompleteInput: ElementRef;\n\n  el: HTMLElement;           // this component  element `<ng2-auto-complete>`\n\n  dropdownVisible: boolean = false;\n  isLoading: boolean = false;\n\n  filteredList: any[] = [];\n  minCharsEntered: boolean = false;\n  itemIndex: number = 0;\n  keyword: string;\n\n  isSrcArr(): boolean {\n    return (this.source.constructor.name === \"Array\");\n  }\n\n  /**\n   * constructor\n   */\n  constructor(\n    elementRef: ElementRef,\n    public autoComplete: Ng2AutoComplete\n  ) {\n    this.el = elementRef.nativeElement;\n  }\n\n  /**\n   * user enters into input el, shows list to select, then select one\n   */\n  ngOnInit(): void {\n    this.autoComplete.source = this.source;\n    this.autoComplete.pathToData = this.pathToData;\n    setTimeout(() => {\n      if (this.autoCompleteInput) {\n        this.autoCompleteInput.nativeElement.focus()\n      }\n    });\n  }\n\n  reloadListInDelay = (evt: any): void  => {\n    let delayMs = this.isSrcArr() ? 10 : 500;\n    let keyword = evt.target.value;\n\n    // executing after user stopped typing\n    this.delay(() => this.reloadList(keyword), delayMs);\n    this.inputChanged.emit(keyword);\n  };\n\n  showDropdownList(event: any): void {\n    this.dropdownVisible = true;\n    this.reloadList(event.target.value);\n  }\n\n  hideDropdownList(): void {\n    this.dropdownVisible = false;\n  }\n\n  reloadList(keyword: string): void {\n\n    this.filteredList = [];\n    if (keyword.length < (this.minChars || 0)) {\n      this.minCharsEntered = false;\n      return;\n    } else {\n      this.minCharsEntered = true;\n    }\n\n    if (this.isSrcArr()) {    // local source\n      this.isLoading = false;\n      this.filteredList = this.autoComplete.filter(this.source, keyword);\n      if (this.maxNumList) {\n        this.filteredList = this.filteredList.slice(0, this.maxNumList);\n      }\n\n    } else {                 // remote source\n      this.isLoading = true;\n\n      if (typeof this.source === \"function\") {\n        // custom function that returns observable\n        this.source(keyword).subscribe(\n          resp => {\n\n            if (this.pathToData) {\n              let paths = this.pathToData.split(\".\");\n              paths.forEach(prop => resp = resp[prop]);\n            }\n\n            this.filteredList = resp;\n            if (this.maxNumList) {\n              this.filteredList = this.filteredList.slice(0, this.maxNumList);\n            }\n          },\n          error => null,\n          () => this.isLoading = false // complete\n        );\n      } else {\n        // remote source\n\n        this.autoComplete.getRemoteData(keyword).subscribe(resp => {\n            this.filteredList = (<any>resp);\n            if (this.maxNumList) {\n              this.filteredList = this.filteredList.slice(0, this.maxNumList);\n            }\n          },\n          error => null,\n          () => this.isLoading = false // complete\n        );\n      }\n    }\n  }\n\n  selectOne(data: any) {\n    this.valueSelected.emit(data);\n  };\n\n  inputElKeyHandler = (evt: any) => {\n    let totalNumItem = this.filteredList.length;\n\n    switch (evt.keyCode) {\n      case 27: // ESC, hide auto complete\n        //this.hideDropdownList();\n        break;\n\n      case 38: // UP, select the previous li el\n        this.itemIndex = (totalNumItem + this.itemIndex - 1) % totalNumItem;\n        break;\n\n      case 40: // DOWN, select the next li el or the first one\n        this.dropdownVisible = true;\n        this.itemIndex = (totalNumItem + this.itemIndex + 1) % totalNumItem;\n        break;\n\n      case 13: // ENTER, choose it!!\n        if (this.filteredList.length > 0) {\n          this.selectOne(this.filteredList[this.itemIndex]);\n        }\n        evt.preventDefault();\n        break;\n    }\n  };\n\n  getFormattedList(data: any): string {\n    let formatter = this.listFormatter || this.defaultListFormatter;\n    return formatter.apply(this, [data]);\n  }\n\n  get emptyList(): boolean {\n    return !(\n      this.isLoading ||\n      (this.minCharsEntered && !this.isLoading && !this.filteredList.length) ||\n      (this.filteredList.length)\n    );\n  }\n\n  private defaultListFormatter(data: any): string {\n    let html: string = \"\";\n    html += data[this.valuePropertyName] ? `<b>(${data[this.valuePropertyName]})</b>` : \"\";\n    html += data[this.displayPropertyName] ? `<span>${data[this.displayPropertyName]}</span>` : data;\n    return html;\n  }\n\n  private delay = (function () {\n    let timer = 0;\n    return function (callback: any, ms: number) {\n      clearTimeout(timer);\n      timer = setTimeout(callback, ms);\n    };\n  })();\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./src/ng2-auto-complete.component.ts","import {\n  Directive,\n  Input,\n  Output,\n  ComponentRef,\n  ViewContainerRef,\n  EventEmitter,\n  OnInit,\n  ComponentFactoryResolver,\n  Renderer,\n  SimpleChanges,\n  SkipSelf,\n  Host,\n  Optional\n} from \"@angular/core\";\nimport { Ng2AutoCompleteComponent } from \"./ng2-auto-complete.component\";\nimport { ControlContainer, AbstractControl, FormGroup, FormControl, FormGroupName } from \"@angular/forms\";\n\n/**\n * display auto-complete section with input and dropdown list when it is clicked\n */\n@Directive({\n  selector: \"[auto-complete], [ng2-auto-complete]\",\n  host: {\n    \"(focus)\": \"showAutoCompleteDropdown()\",\n    \"(blur)\": \"hideAutoCompleteDropdown()\",\n    \"(keydown)\": \"keydownEventHandler($event)\",\n    \"(input)\": \"inputEventHandler($event)\"\n  }\n})\nexport class Ng2AutoCompleteDirective implements OnInit {\n\n  @Input(\"auto-complete-placeholder\") autoCompletePlaceholder: string;\n  @Input(\"list-formatter\") listFormatter: (arg: any) => string;\n  @Input(\"source\") source: any;\n  @Input(\"path-to-data\") pathToData: string;\n  @Input(\"min-chars\") minChars: number;\n  @Input(\"value-property-name\") valuePropertyName: string;\n  @Input(\"display-property-name\") displayPropertyName: string;\n  @Input(\"blank-option-text\") blankOptionText: string;\n  @Input(\"no-match-found-text\") noMatchFoundText: string;\n  @Input(\"accept-user-input\") acceptUserInput: boolean;\n  @Input(\"loading-text\") loadingText: string = \"Loading\";\n  @Input(\"max-num-list\") maxNumList: string;\n\n  @Input() ngModel: String;\n  @Input('formControlName') formControlName: string;\n  //if [formControl] is used on the anchor where our directive is sitting\n  //a form is not necessary to use a formControl we should also support this\n  @Input('formControl') extFormControl: FormControl;\n\n  @Output() ngModelChange = new EventEmitter();\n  @Output() valueChanged = new EventEmitter();\n\n\n  componentRef: ComponentRef<Ng2AutoCompleteComponent>;\n  el: HTMLElement;   // this element element, can be any\n  acDropdownEl: HTMLElement; // auto complete element\n  inputEl: HTMLInputElement;  // input element of this element\n  formControl: AbstractControl;\n\n  constructor(private resolver: ComponentFactoryResolver,\n              private renderer: Renderer,\n              public  viewContainerRef: ViewContainerRef,\n              @Optional() @Host() @SkipSelf() private parentForm: ControlContainer) {\n    this.el = this.viewContainerRef.element.nativeElement;\n  }\n\n  ngOnInit(): void {\n    // wrap this element with <div class=\"ng2-auto-complete\">\n    let divEl = document.createElement(\"div\");\n    divEl.className = \"ng2-auto-complete-wrapper\";\n    divEl.style.position = \"relative\";\n    this.el.parentElement.insertBefore(divEl, this.el.nextSibling);\n    divEl.appendChild(this.el);\n\n    // apply toString() method for the object\n    this.selectNewValue(this.ngModel);\n\n    //Check if we were supplied with a [formControlName] and it is inside a [form]\n    //else check if we are supplied with a [FormControl] regardless if it is inside a [form] tag\n    if (this.parentForm && this.formControlName) {\n      if (this.parentForm['form']) {\n        this.formControl = (<FormGroup>this.parentForm['form']).get(this.formControlName);\n      } else if (this.parentForm instanceof FormGroupName) {\n        this.formControl = (<FormGroupName>this.parentForm).control.controls[this.formControlName];\n      }\n    } else if (this.extFormControl) {\n      this.formControl = this.extFormControl;\n    }\n\n    // when somewhere else clicked, hide this autocomplete\n    document.addEventListener(\"click\", this.hideAutoCompleteDropdown);\n  }\n\n  ngOnDestroy(): void {\n    if (this.componentRef) {\n      this.componentRef.instance.valueSelected.unsubscribe();\n      this.componentRef.instance.inputChanged.unsubscribe();\n    }\n    document.removeEventListener(\"click\", this.hideAutoCompleteDropdown);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['ngModel']) {\n      this.ngModel = this.addToStringFunction(changes['ngModel'].currentValue);\n    }\n  }\n\n  //show auto-complete list below the current element\n  showAutoCompleteDropdown() {\n\n    let factory = this.resolver.resolveComponentFactory(Ng2AutoCompleteComponent);\n\n    this.componentRef = this.viewContainerRef.createComponent(factory);\n\n    let component = this.componentRef.instance;\n    component.showInputTag = false; //Do NOT display autocomplete input tag separately\n\n    component.listFormatter = this.listFormatter;\n    component.pathToData = this.pathToData;\n    component.minChars = this.minChars;\n    component.valuePropertyName = this.valuePropertyName || \"id\";\n    component.displayPropertyName = this.displayPropertyName || \"value\";\n    component.source = this.source;\n    component.placeholder = this.autoCompletePlaceholder;\n    component.blankOptionText = this.blankOptionText;\n    component.noMatchFoundText = this.noMatchFoundText;\n    component.acceptUserInput = this.acceptUserInput;\n    component.loadingText = this.loadingText;\n    component.maxNumList = parseInt(this.maxNumList, 10);\n\n    component.valueSelected.subscribe(this.selectNewValue);\n    component.inputChanged.subscribe(this.componentInputChanged);\n\n    this.acDropdownEl = this.componentRef.location.nativeElement;\n    this.acDropdownEl.style.display = \"none\";\n\n    // if this element is not an input tag, move dropdown after input tag\n    // so that it displays correctly\n    this.moveAutocompleteDropDownAfterInputEl();\n\n    setTimeout(() => {\n      component.reloadList(this.inputEl.value);\n      this.styleAutoCompleteDropdown();\n      component.dropdownVisible = true;\n    });\n  }\n\n  hideAutoCompleteDropdown = (event?: any): void => {\n    if (this.componentRef) {\n      if ( //document level click to hide dropdown\n        event && event.type === \"click\" &&\n        event.target.tagName !== \"INPUT\" && !this.elementIn(event.target, this.acDropdownEl)\n      ) {\n        this.componentRef.destroy();\n        this.componentRef = undefined;\n      } else if (!event) {\n        this.componentRef.destroy();\n        this.componentRef = undefined;\n      }\n    }\n  };\n\n  styleAutoCompleteDropdown = () => {\n    if (this.componentRef) {\n      let component = this.componentRef.instance;\n\n      /* setting width/height auto complete */\n      let thisElBCR = this.el.getBoundingClientRect();\n      let thisInputElBCR = this.inputEl.getBoundingClientRect();\n      let closeToBottom = thisInputElBCR.bottom + 100 > window.innerHeight;\n\n      this.acDropdownEl.style.width = thisElBCR.width + \"px\";\n      this.acDropdownEl.style.position = \"absolute\";\n      this.acDropdownEl.style.zIndex = \"1\";\n      this.acDropdownEl.style.left = \"0\";\n      this.acDropdownEl.style.display = \"inline-block\";\n\n      if (closeToBottom) {\n        this.acDropdownEl.style.bottom = `${thisInputElBCR.height}px`;\n      } else {\n        this.acDropdownEl.style.top = `${thisInputElBCR.height}px`;\n      }\n    }\n  };\n\n  addToStringFunction(val: any): any {\n    if (val && typeof val === \"object\") {\n      let displayVal = val[this.displayPropertyName || \"value\"];\n      val.toString = function () {\n        return displayVal;\n      }\n    }\n    return val;\n  }\n\n  componentInputChanged = (val: string) => {\n    if (this.acceptUserInput !== false) {\n      this.inputEl.value = val;\n      if ((this.parentForm && this.formControlName) || this.extFormControl) {\n        this.formControl.patchValue(val);\n      }\n      (val !== this.ngModel) && this.ngModelChange.emit(val);\n      this.valueChanged.emit(val);\n    }\n  };\n\n  selectNewValue = (val: any) => {\n    if (val !== '') {\n      val = this.addToStringFunction(val);\n    }\n    if ((this.parentForm && this.formControlName) || this.extFormControl) {\n      if (!!val) {\n        this.formControl.patchValue(val);\n      }\n    }\n    (val !== this.ngModel) && this.ngModelChange.emit(val);\n    this.valueChanged.emit(val);\n    this.inputEl && (this.inputEl.value = '' + val);\n    this.hideAutoCompleteDropdown();\n  };\n\n  private moveAutocompleteDropDownAfterInputEl(): void {\n    this.inputEl = <HTMLInputElement>this.el;\n    if (this.el.tagName !== \"INPUT\" && this.acDropdownEl) {\n      this.inputEl = <HTMLInputElement>this.el.querySelector(\"input\");\n      this.inputEl.parentElement.insertBefore(this.acDropdownEl, this.inputEl.nextSibling);\n    }\n  }\n\n  private elementIn(el: Node, containerEl: Node): boolean {\n    while (el = el.parentNode) {\n      if (el === containerEl) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private keydownEventHandler = (evt: any) => {\n    if (this.componentRef) {\n      let component = <Ng2AutoCompleteComponent>this.componentRef.instance;\n      component.inputElKeyHandler(evt);\n    }\n  };\n\n  private inputEventHandler = (evt: any) => {\n    if (this.componentRef) {\n      let component = <Ng2AutoCompleteComponent>this.componentRef.instance;\n      component.dropdownVisible = true;\n      component.reloadListInDelay(evt);\n    } else {\n      this.showAutoCompleteDropdown()\n    }\n  };\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/strip-loader/lib?strip[]=debug,strip[]=console.log!./src/ng2-auto-complete.directive.ts"],"sourceRoot":""}